# Loon global configuration by Tartarus
# Author GitHub: https://github.com/Tartarus2014
# Script library GitHub: https://github.com/Tartarus2014/Loon-Script
# Loon official documentation: https://nsloon.app/docs/intro
# Loon tutorial link: https://coffee-elderberry-22b.notion.site/Loon-71747252d5054551a8cd10924064899c
# Loon third-party knowledge base: https://t.me/ibilibili/581
# Loon rules GitHub: https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Loon

#Import configuration.
# After the import is completed, click https://www.nsloon.com/openloon/flowmodel=filter to switch to automatic flow distribution mode.
# Click https://www.nsloon.com/openloon/proxymode=tun again to switch the proxy mode to TUN Only mode [This operation indicates that the switch is successful after clicking to jump to Loon].
#Open the switch between the three functions of [MitM] [Script] [Rewrite].
# Turn on the [MitM over HTTP/2] and [QUIC fallback protection] switches in [MitM].
# Ensure that Safari is the default browser, install and trust the certificate.
# Click [Configuration] on the bottom navigation bar of Loon → [⋯] in the upper right corner to turn on the [All Switches] switch.
#Add your airport subscription.
#Turn on Loon and click https://www.nsloon.com/openloon/update?sub=all to update all external resources with one click.

[General]
# IPv6 支持
ip-mode = dual
ipv6-vif = auto
# UDP相关
disable-stun = false
udp-fallback-mode = REJECT
# SNI辅助规则匹配
sni-sniffing = true
# 策略组切换时关闭连接
disconnect-on-policy-change = true
# 域名拦截行为
domain-reject-mode = Request
# > 跳过代理
# 跳过某个域名或者 IP 段，这些目标主机将不会由 Loon Proxy 处理。
skip-proxy = localhost, *.local, captive.apple.com, e.crashlytics.com, www.baidu.com, passenger.t3go.cn, yunbusiness.ccb.com, wxh.wo.cn, gate.lagou.com, www.abchina.com.cn, login-service.mobile-bank.psbc.com, mobile-bank.psbc.com, 10.0.0.0/8, 127.0.0.1/32, 172.16.0.0/12, 192.168.0.0/16, 192.168.122.1/32, 193.168.0.1/32, ::1/128, fe80::/10
# > Always Real IP Hosts
# DNS 数据包将被转发到上游 DNS 服务器。
real-ip = *.lan, *.direct, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, localhost.*.qq.com, localhost.*.weixin.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, music.163.com, *.music.163.com, *.126.net, musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, *.kuwo.cn, api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, *.y.qq.com, streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, *.xiami.com, *.music.migu.cn, music.migu.cn, proxy.golang.org, *.mcdn.bilivideo.cn, *.cmpassport.com, id6.me, open.e.189.cn, opencloud.wostore.cn, id.mail.wo.cn, mdn.open.wo.cn, hmrz.wo.cn, nishub1.10010.com, enrichgw.10010.com, *.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *.10099.com.cn, *.microdone.cn, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*
# 绕过路由
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器
dns-server = 223.5.5.5,180.184.1.1
# doh-server = https://223.5.5.5/dns-query,https://8.8.8.8/dns-query
# Hijack DNS
# 默认情况下，Loon 只返回发送到 Loon DNS 地址的 DNS 查询的假 IP 地址(198.18.0.2)。
# 有些设备或软件总是使用硬编码的 DNS 服务器。 (例如 Google Speakers 总是使用 8.8.8.8)。 您可以使用此选项劫持查询，以获得一个假地址。
hijack-dns = 8.8.8.8:53,8.8.4.4:53
# Wi-Fi 访问
allow-wifi-access = false
wifi-access-http-port = 1234
wifi-access-socks5-port = 1235
mitm-on-wifi-access = false
# 代理测速 URL
internet-test-url = http://connectivitycheck.platform.hicloud.com/generate_204
proxy-test-url = http://detectportal.firefox.com/success.txt
# 测速超时 (s)
test-timeout = 5
# 网络接口
interface-mode = auto
# 当节点连续失败多少次后开始切换节点
switch-node-after-failure-times = 3
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger = "default":rule, "cellular":rule,"ASUS_5G":direct
# geoip和asn
geoip-url = https://raw.githubusercontent.com/Masaiki/GeoIP2-CN/release/Country.mmdb
ipasn-url = https://raw.githubusercontent.com/P3TERX/GeoLite.mmdb/download/GeoLite2-ASN.mmdb
# 解析器
resource-parser = https://raw.githubusercontent.com/sub-store-org/Sub-Store/release/sub-store-parser.loon.min.js

[Host]

[Proxy]

[Remote Proxy]
Airport subscription = https://suo.yt/W7BkpTS
NetEase Unlock = https://git.io/JfNq3, parser-enable = true

[Proxy Group]
FINAL = select,DIRECT, node selection,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/C olor/Final.png
Node selection = select, Hong Kong node, Lion City node, American node, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet /Color/Proxy.png
Apple service = select, DIRECT, node selection, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Co lor/Apple.png
NetEase Music = select,DIRECT, unlock node,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Co lor/Netease_Music.png
Netflix video = select, node selection, Lion City node, Hong Kong node, Taiwan node, American node, img-url = https://raw.githubusercontent.com/Koolson/Qure/mast er/IconSet/Color/Netflix.png
YouTube video = select, node selection, Hong Kong node, Lion City node, Korean node, American node, img-url = https://raw.githubusercontent.com/Koolson/Qure/mast er/IconSet/Color/YouTube.png
Bahamut = select, node selection, Taiwan node, Hong Kong node, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet /Color/Bahamut.png
Telegram message = select, node selection, Hong Kong node, Lion City node, American node, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/Ic onSet/Color/Telegram.png
Foreign media = select, node selection, Lion City node, Hong Kong node, Taiwan node, Korean node, American node, img-url = https://raw.githubusercontent.com/Koolson/Qure /master/IconSet/Color/Streaming.png
Hong Kong and Taiwan drama = select, DIRECT, Taiwan node, Hong Kong node, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconS et/Color/StreamingSE.png
Hong Kong node = select, Hong Kong, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_ Kong.png
Taiwan node = select, Taiwan, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwa N.png
Lion City node = select, Singapore, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Sing Apore.png
Korean node = select, Korea, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea .Png
Japanese node = select, Japan, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan .Png
US node = select, US, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Unite d_States.png
Unlock node = select, NetEase unlock, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Net ease_Music_Unlock.png

[Remote Filter]
Hong Kong = NameRegex, FilterKey = "(? I) (Hong Kong|HK|Hong)"
Taiwan = NameRegex, FilterKey = "(? I) (Taiwan|TW|Tai)"
Japan = NameRegex, FilterKey = "(? I) (Japan | Kawari | Tokyo | Osaka | Izumihi | Saitama | Shanghai Japan | Shenzhen | JP | Japan)"
South Korea = NameRegex, FilterKey = "(? I) (KR|Korea|KOR|Seoul|Korea|Korea)"
United States = NameRegex, FilterKey = "(? I) (United States | Portland | Dallas | Oregon | Phoenix | Ferimon | Silicon Valley | Las Vegas | Los Angeles | San Jose | Santa Clara | Seattle | Chicago | US | United States)"
Singapore = NameRegex, FilterKey = "(? I) (Singapore)
NetEase Unlock = NameRegex, FilterKey = "(? i)(unblock|music|Music|Cloud Music|🎧)"

[Remote Rule]
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list, policy=REJECT, tag=de-advertising,enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TestFlight/TestFligh T.list, policy=node selection, tag=TestFlight, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, po licy=Apple service, tag=Apple service, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/NetEaseMusic/NetEase Music.list, policy=NetEase Music, tag=NetEase Music, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list , policy= YouTube video, tag= YouTube video, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list , policy= Netflix video, tag= Netflix video, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Bahamut/Bahamut.list , policy=Bahamut, tag=Bahamut, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMe Dia.list, policy=node selection, tag=foreign media, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BiliBili/BiliBili.li St, policy=Hong Kong and Taiwan drama, tag=domestic media, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.li St, policy=telegram message, tag=telegram message, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy.list, po Licy=node selection, tag=global rule, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy_Domain.l Ist, policy=node selection, tag=global rule,enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, po licy=DIRECT, tag=global direct connection, enabled=true

[Rule]
GEOIP,CN,DIRECT
FINAL,FINAL

[Rewrite]
enable = false

[Remote Rewrite]

[Script]
enable = false

[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Fake_Vip.conf, tag=Fake-VIP, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag=Cookie.Be sure to close it after getting it., enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Task.conf, tag=Task, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Script.conf, tag=Script, enabled=false

[Plugin]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/MediaCheck.plugin, tag=Node Detection Tool, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Advertising/Advertising.plugin, tag=Advertising, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag=General, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/TF-Download.plugin, tag=TF-Download, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, enabled=true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag=Subscription parser, enabled=false

[MITM]
enable = false
